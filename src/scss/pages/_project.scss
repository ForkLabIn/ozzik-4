/* ======= Base ======= */
.project {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	overflow: auto;
	height: 100%;
	
	&:not(.active) { z-index: -1; }
}
.project-artwork { position: absolute; }

/* ======= Header ======= */
$size-project-header: $size-grid-row * 2;
.project-header {
	position: relative;
	height: $size-project-header;
	overflow: hidden;
	@extend .centered;
	
	&.colored::after {
		content: "";
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
		height: 1px;
		background: rgba(0,0,0,.08);
	}
}

.ripple {
	display: inline-block;
	width: $size-project-header;
	height: $size-project-header;
	border-radius: 100%;
	@include transform(translate3d(0,30px,0) scale(0));
}

.project-title {
	position: absolute;
	bottom: .7em;
	width: 100%;
	font-size: 1.3rem;
	opacity: .6;
}

.back-button {
	position: fixed;
	top: 0;
	left: 0;
	padding: 1em 2em 2em 1em;
	cursor: pointer;

	&::before {
		content: "";
		display: block;
		width: $size-ui-sprite;
		height: $size-ui-sprite;
		background-position: 0 $size-ui-sprite * -1;
	}

	&:hover,
	&:focus { @include transform(translate3d(-5px,0,0)); }
	&:active { @include transform(translate3d(-5px,0,0) scale(.9)); }
}

/* ======= Content ======= */
.project-meta {
	width: 21em;
	margin: 2rem auto 0;

	dt { width: 3em; }
	dd { width: 17em; }
}

$space-synopsis: 4.5rem;
.project-synopsis {
	margin: $space-synopsis auto;
}
.project-separator {
	display: block;
	width: 20px;
	height: 20px;
	margin: $space-synopsis * 1.5 auto;
}

.project-button {
	display: inline-block;
	padding: .25rem 1rem .4rem;
	border-radius: 3px;
	border: 2px solid;
	color: $color-main;

	&.dead {
		color: #bbb !important;
		border-style: dotted;
		padding-top: .3rem;

		&::before {
			content: "";
			display: inline-block;
			vertical-align: middle;
			width: 15px;
			height: 15px;
			margin-right: $space - .1;
			background-position: 0 $size-ui-sprite * -2;
		}
	}

	&:not(.dead) {
		&:hover,
		&:focus { @include transform(scale(1.03) rotateZ(-.5deg)); }
		&:active { @include transform(rotateZ(-.8deg)); }
	}
}

/* ======= Content ======= */
$i: 5;
$section-width: ($size-grid-column / 2 * $i) + ($size-grid-gutter * ($i - 1));

.project-content {
	h2 {
		margin-top: 2em;
		font-size: 1.1rem;
	}
	h3 { margin-top: 1.5em; }

	h2,
	h3 {
		margin-bottom: 0;
	
		& + p { margin-top: .3rem; }
	}

	code {
		font-family: Menlo;
		background: #f0f0f0;
		padding: .1rem .3rem;
		border-radius: 2px;
		font-size: .9em;
		color: #444;
	}
	.code-snippet { display: block; }

	.project-section {
		width: $section-width;
		margin: 2rem auto;
	}
	.project-column { width: ($section-width - $size-grid-gutter) / 2; }
	.column-imaged { margin-top: .5em; }
}
.project-figure {
	margin: .5rem auto;
	
	&.with-caption {
		position: relative;
		margin-bottom: 4.5em;
	}
}
.project-figcaption {
	position: absolute;
	bottom: -2.4em;
	width: 100%;
	font-size: .9em;
	text-align: center;
	font-style: italic;
	opacity: .5;

	.project-video & { bottom: -1.9em; }
}

.project-video {
	width: 644px;

	iframe {
		display: block;
		margin: 0 auto;
	}
}
.project-video,
.project-video-inline { margin: 0 auto; }
.column-video { width: 300px; }
.project-video-inline,
.project-video-inline video { max-width: 244px; }

.figure-ios {
	width: 320px;
	background-size: 320px;
}

/* ======= Reusable Cues ======= */
.project-cue {
	position: relative;

	&:not(:first-child) { margin-top: $space; }

	&::before {
		content: "";
		// content: counter(li);
		// counter-increment: li;
		// padding: .2em .6em;
		width: 22px;
		height: 22px;
		border-radius: 100%;
		background-color: #eee;
	}
}
.project-cue-standalone::before {
	display: block;
	margin: 2.5rem auto;
}
.project-cue-bullet::before {
	position: absolute;
	display: inline-block;
	left: -2rem;
	margin-top: -0.05rem;
}

.project-conclusion {
	padding: 1em;
	border-radius: .3em;
	border: 1px solid lighten($color-main-light, 12%);
	background: lighten($color-main-light, 22%);
	color: desaturate($color-main, 10%);
	box-sizing: border-box;

	p { margin: 0; }
}

$i: 0;
@each $item in problem, goal, result, success {
	.project-cue-#{$item}::before { background-position: $i * $size-ui-sprite * -1 -66px; }
	
	$i: $i + 1;
}
.project-cue-nested { padding: .7rem 2rem 0; }